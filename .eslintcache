[{"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/graphql/apolloProvider.js":"1","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/generated/graphql.tsx":"2","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/table.tsx":"3","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/Home.tsx":"4","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/rockets.tsx":"5","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/rocketCard.tsx":"6","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/Cover.tsx":"7","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/Navbar.tsx":"8","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/App.jsx":"9","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/index.tsx":"10","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/serviceWorker.ts":"11"},{"size":617,"mtime":1608457147703,"results":"12","hashOfConfig":"13"},{"size":33166,"mtime":1608456695829,"results":"14","hashOfConfig":"13"},{"size":4791,"mtime":1609175689640,"results":"15","hashOfConfig":"13"},{"size":538,"mtime":1609170544668,"results":"16","hashOfConfig":"13"},{"size":2083,"mtime":1609173731219,"results":"17","hashOfConfig":"13"},{"size":1914,"mtime":1609175394205,"results":"18","hashOfConfig":"13"},{"size":1211,"mtime":1609226960288,"results":"19","hashOfConfig":"13"},{"size":5232,"mtime":1609222830294,"results":"20","hashOfConfig":"13"},{"size":2330,"mtime":1609226859116,"results":"21","hashOfConfig":"13"},{"size":500,"mtime":1609226616947,"results":"22","hashOfConfig":"13"},{"size":5289,"mtime":1606639381891,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1o634wv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/graphql/apolloProvider.js",[],["49","50"],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/generated/graphql.tsx",[],["51","52"],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/table.tsx",[],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/Home.tsx",[],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/rockets.tsx",[],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/rocketCard.tsx",[],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/Cover.tsx",[],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/components/Navbar.tsx",["53","54","55","56","57","58"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  List,\n  ListItem,\n  Grid,\n  SwipeableDrawer,\n  Switch,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\n// import logo\nimport Logo from \"../assets/logo3.png\";\n\nconst useStyles = makeStyles((theme: any) => ({\n  list: {\n    width: 200,\n  },\n  padding: {\n    paddingRight: 30,\n    cursor: \"pointer\",\n    color: \"yellow\",\n    fontFamily: \"Quicksand\",\n  },\n\n  sideBarIcon: {\n    padding: 0,\n    color: \"white\",\n    cursor: \"pointer\",\n  },\n  link: {\n    color: theme.link.color,\n    textDecoration: 'none'\n  },\n}));\nfunction Navbar(props: any) {\n  const classes = useStyles();\n  const [drawerActivate, setDrawerActivate] = useState(false);\n  const [drawer, setDrawer] = useState(false);\n  const [navDisplay, setNavDisplay] = useState(\"block\");\n\n  useEffect(() => {\n    if (window.innerWidth <= 600) {\n      setDrawerActivate(true);\n    }\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 50) {\n        setNavDisplay(\"none\");\n      } else {\n        setNavDisplay(\"block\");\n      }\n    });\n    window.addEventListener(\"resize\", () => {\n      if (window.innerWidth <= 600) {\n        setDrawerActivate(true);\n      } else {\n        setDrawerActivate(false);\n      }\n    });\n  }, []);\n\n  //Small Screens\n  const createDrawer = () => {\n    return (\n      <div>\n        <AppBar\n          style={{ backgroundColor: \"transparent\", display: navDisplay }}\n          className=\"heading-text\"\n        >\n          <Toolbar style={{ height: \"65px\" }}>\n            <Grid container direction=\"row\" alignItems=\"center\">\n              <MenuIcon\n                className={classes.sideBarIcon}\n                style={{ color: \"white\" }}\n                onClick={() => {\n                  setDrawer(true);\n                }}\n              />\n              <img\n                src={Logo}\n                height=\"80px\"\n                width=\"80px\"\n                alt=\"\"\n                style={{ marginLeft: \"30%\", marginRight: \"15%\" }}\n              />\n              <Switch\n                checked={props.darkState}\n                color=\"primary\"\n                onChange={props.cb}\n              />\n            </Grid>\n          </Toolbar>\n        </AppBar>\n\n        <SwipeableDrawer\n          open={drawer}\n          onClose={() => {\n            setDrawer(false);\n          }}\n          onOpen={() => {\n            setDrawer(true);\n          }}\n        >\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setDrawer(false);\n            }}\n            onKeyDown={() => {\n              setDrawer(false);\n            }}\n          >\n            <List className={classes.list} style={{ color: \"navy\" }}>\n              <ListItem key={1} button divider>\n                <Typography\n                  variant=\"h6\"\n                  className=\"mx-auto heading-text\"\n                  style={{ fontFamily: \"Quicksand\" }}\n                >\n                  <a className=\"link\">\n                    <img\n                      src={Logo}\n                      height=\"80px\"\n                      width=\"80px\"\n                      alt=\"\"\n                      style={{ marginLeft: \"50%\" }}\n                    />\n                  </a>\n                </Typography>\n              </ListItem>\n              <a className={classes.link}>\n                <ListItem key={2} button divider>\n                  Home\n                </ListItem>\n              </a>\n              <a className={classes.link}>\n                <ListItem key={3} button divider>\n                  Launches\n                </ListItem>\n              </a>\n              <ListItem key={4} button divider>\n              <Switch\n                checked={props.darkState}\n                color=\"primary\"\n                onChange={props.cb}\n              />\n              </ListItem>\n            </List>\n          </div>\n        </SwipeableDrawer>\n      </div>\n    );\n  };\n\n  //Larger Screens\n  const destroyDrawer = () => {\n    return (\n      <AppBar\n        style={{\n          backgroundColor: \"transparent\",\n          fontFamily: \"Quicksand\",\n          color: \"yellow\",\n          display: navDisplay,\n        }}\n        className=\"heading-text\"\n      >\n        <Toolbar style={{ height: \"100px\", color: \"yellow\" }}>\n          <Typography\n            variant=\"h4\"\n            style={{ flexGrow: 1, marginLeft: \"70px\", fontFamily: \"Quicksand\" }}\n          >\n            <a className=\"link\">\n              <img src={Logo} height=\"100px\" width=\"100px\" alt=\"\" />\n            </a>\n          </Typography>\n          <a className=\"link\">\n            <h3 className={classes.padding}>\n              <strong>Home</strong>\n            </h3>\n          </a>\n          <a className=\"link\">\n            <h3 className={classes.padding}>\n              <strong>Launches</strong>\n            </h3>\n          </a>\n        </Toolbar>\n      </AppBar>\n    );\n  };\n\n  return <div>{drawerActivate ? createDrawer() : destroyDrawer()}</div>;\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default Navbar;\n","/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/App.jsx",[],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/index.tsx",[],"/media/tanzeel/React Native/BOOTCAMP-2020/space-x/src/serviceWorker.ts",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":125,"column":19,"nodeType":"65","endLine":125,"endColumn":39},{"ruleId":"63","severity":1,"message":"64","line":136,"column":15,"nodeType":"65","endLine":136,"endColumn":43},{"ruleId":"63","severity":1,"message":"64","line":141,"column":15,"nodeType":"65","endLine":141,"endColumn":43},{"ruleId":"63","severity":1,"message":"64","line":177,"column":13,"nodeType":"65","endLine":177,"endColumn":33},{"ruleId":"63","severity":1,"message":"64","line":181,"column":11,"nodeType":"65","endLine":181,"endColumn":31},{"ruleId":"63","severity":1,"message":"64","line":186,"column":11,"nodeType":"65","endLine":186,"endColumn":31},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]